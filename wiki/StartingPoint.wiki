#labels Phase-Design
= 出发点 =
  * 最大程度的复用代码，避免重造轮子的行为。希望有一个简单的构架可以加以扩充，使得代码可以积累起来不断复用。
  * 实现控制台和脚本，可以实现游戏的快速开发。
  * 可以快速开发游戏编辑器。
= 发展 =
  * 发布游戏通用制作器，制作器支持一种动态语言。
  * 在该制作器的基础上，可以发布各种各样的插件的二进制文件，用户可以直接下载该插件，被动态语言加载并使用。
  * 编辑器也可以使用插件的方式创建。也就是说编辑器与引擎一体化。
= 实现 =
  使用C++设计一个足够简单的、可靠的框架，可以在不改变框架代码的情况下实现各种各样的功能，例如蒙版、着色器特效，这些使用编写扩展来实现。由于框架仅提供最基础的功能，因此保证可靠且易于理解。发布SDK，可用来开发插件。
  插件也可以发布C++的SDK以及lib文件，被其他插件所依赖。
  在动态语言和C++语言的转换之间取得效率最大化和最佳开发效率。
= 问题 =
  * C++的dll不同编译器间并不兼容，而C式面向对象编程又过于繁琐。目前采用折衷方式，采用纯虚接口+内联方式可以使得对象内存布局相同的编译器可以兼容（例如VC各种版本）。
  * windows平台上，如果使用旧版本SDK开发的插件，放在了有新版本核心的电脑上，可能会造成配置错误（未验证）。

  上述种种问题表明，所有代码开源并在本地重编译可解决。唯一问题就是某个插件更新时所有依赖于该插件的插件需要重编译。

= 参考 =
以下参考可能带来一些启发。
  * SWIG创建语言扩展。
  * Game Maker扩展编写。